---
import MapLayout from "../../layouts/MapLayout.astro";
---

<MapLayout
    title="Stoako | Kingdom Map"
    embedTitle="Map of the Kingdom of Stoako"
    embedDescription="View a detailed map of the Kingdom of Stoako."
    imageUrl="https://stoako.com/images/maps/layered/kingdom/background.png"
>
    <span
        style="margin-top: .5rem; width: 100%; display:inline-flex; justify-content:space-between; align-items: center;"
    >
        <h2>Kingdom Map</h2>
        <span style="display:inline-flex; gap:1.5rem;">
            <a style="cursor:pointer;" id="view-enlarged-btn">View Enlarged</a>
            <a style="cursor:pointer;" id="download-btn">Download</a></span
        >
    </span>
    <span id="overlays">
        <label>
            <input id="ovl-road-names" type="checkbox" />
            Road Names
        </label>
        <label>
            <input id="ovl-road-highlights" type="checkbox" />
            Road Highlights
        </label>
        <label>
            <input id="ovl-land-claims" type="checkbox" />
            Land Claims
        </label>
        <label>
            <input id="ovl-landmarks" type="checkbox" />
            Landmarks
        </label>
    </span>
    <div id="img-wrapper">
        <img
            id="img-background"
            src="/images/maps/layered/kingdom/Background.png"
            width="100%"
        />
        <img
            class="hidden"
            id="img-land-claims"
            src="/images/maps/layered/kingdom/LandClaimNames.png"
            width="100%"
        />
        <img
            class="hidden"
            id="img-landmarks"
            src="/images/maps/layered/kingdom/LandmarkNames.png"
            width="100%"
        />
        <img
            class="hidden"
            id="img-road-highlights"
            src="/images/maps/layered/kingdom/RoadHighlights.png"
            width="100%"
        />
        <img
            class="hidden"
            id="img-road-names"
            src="/images/maps/layered/kingdom/RoadNames.png"
            width="100%"
        />
        <small id="last-updated">
            <code>Last updated 23/10/24</code>
        </small>
    </div>
    <img
        style="visibility:hidden;"
        src="/images/maps/layered/kingdom/Background.png"
        width="100%"
    />

    <canvas id="canvas" style="display:none;"></canvas>
</MapLayout>

<script lang="js">
    document.addEventListener("DOMContentLoaded", () => {
        const o = {
            LandmarkNames: document.getElementById("ovl-landmarks"),
            LandClaims: document.getElementById("ovl-land-claims"),
            RoadHighlights: document.getElementById("ovl-road-highlights"),
            RoadNames: document.getElementById("ovl-road-names"),
        };

        const i = {
            LandmarkNames: document.getElementById("img-landmarks"),
            LandClaims: document.getElementById("img-land-claims"),
            RoadHighlights: document.getElementById("img-road-highlights"),
            RoadNames: document.getElementById("img-road-names"),
        };

        Object.keys(o).forEach((key) => {
            o[key].addEventListener("change", () => {
                if (o[key].checked) {
                    i[key].classList.remove("hidden");
                } else {
                    i[key].classList.add("hidden");
                }
            });
        });

        // Combine images and download
        const canvas = document.getElementById("canvas");
        const ctx = canvas.getContext("2d");

        function combineImages(callback) {
            const backgroundImage = document.getElementById("img-background");

            // Ensure the background image is loaded before accessing its properties
            if (backgroundImage.complete) {
                canvas.width = backgroundImage.naturalWidth;
                canvas.height = backgroundImage.naturalHeight;

                // Draw the background image on canvas
                ctx.drawImage(
                    backgroundImage,
                    0,
                    0,
                    canvas.width,
                    canvas.height,
                );

                // Draw visible overlay images on the canvas
                Object.keys(i).forEach((key) => {
                    const img = i[key];
                    if (!img.classList.contains("hidden") && img.complete) {
                        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
                    }
                });

                // Call the callback with the Data URL
                callback(canvas.toDataURL("image/png"));
            } else {
                backgroundImage.onload = () => {
                    combineImages(callback);
                };
            }
        }

        document
            .getElementById("download-btn")
            .addEventListener("click", () => {
                combineImages((dataUrl) => {
                    const link = document.createElement("a");
                    link.download = "combined-map.png";
                    link.href = dataUrl;
                    link.click();
                });
            });

        document
            .getElementById("view-enlarged-btn")
            .addEventListener("click", () => {
                combineImages((dataUrl) => {
                    fetch(dataUrl)
                        .then((res) => res.blob())
                        .then((blob) => {
                            const blobUrl = URL.createObjectURL(blob);
                            window.open(blobUrl, "_blank");
                        })
                        .catch((err) =>
                            console.error("Failed to create blob:", err),
                        );
                });
            });
    });
</script>

<style>
    h2 {
        margin: 0;
        margin-bottom: 0.33rem;
    }

    .hidden {
        visibility: hidden;
    }

    #overlays {
        background-color: var(--c-accent);
        width: 100%;
        display: inline-flex;
        gap: 0.75rem;
        font-size: 0.9rem;
        color: lightgray;
        margin-bottom: 0.15rem;
    }

    #overlays label {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.15rem;
        padding: 0.2rem 0.15rem;
    }

    #img-wrapper {
        position: relative;
        width: 100%;
        height: 100%;
    }

    #img-wrapper * {
        position: absolute;
        top: 0;
        left: 0;
        object-fit: cover;
    }

    #last-updated {
        margin-bottom: 0.5rem;
        z-index: 999;
        color: white;
        opacity: 0.75;
        width: 100%;
        margin: .1rem .15rem;
        text-align: right;
    }
</style>
